{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.7.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"**QUESTION:**\n\nCarbon-dioxide (CO2) is one of the major greenhouse gases that is implicated in the gradual warming of the earth’s temperature. Measured concentrations of CO2 (in ppm) and atmospheric temperature (spatially and temporally averaged over a year) available from USEPA’s Climate Change Indicators website (www.epa.gov/climate-indicators) between 1984 and 2014 is given in co2_levels.csv The temperatures are deviation in deg F from the average temperature in the period 1901-2000. Climate models recommend that the global temperature increase should be kept below 2 deg C (3.6 deg F) by cutting down on CO2 emissions. Using ordinary linear least squares regression, estimate the maximum permissible level of CO2 in the atmosphere that can meet this goal. Assume that the level of CO2 increases linearly with time, estimate using the given data how many years it will take for CO2 to reach the maximum permissible. Note that this is a simplified analysis because other greenhouse gases such as methane, nitrous oxide, water vapour, etc. have not been considered. In order to improve your model you are encouraged to use other reliable data sources you can find (cite the sources from where you obtain additional data).","metadata":{}},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2023-03-11T16:00:58.468535Z","iopub.execute_input":"2023-03-11T16:00:58.469000Z","iopub.status.idle":"2023-03-11T16:00:58.556489Z","shell.execute_reply.started":"2023-03-11T16:00:58.468956Z","shell.execute_reply":"2023-03-11T16:00:58.555471Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"/kaggle/input/co2-levels/co2_levels.xlsx\n","output_type":"stream"}]},{"cell_type":"code","source":"# Reading the file \"co2_levels\"\ndf=pd.read_excel(\"/kaggle/input/co2-levels/co2_levels.xlsx\")","metadata":{"execution":{"iopub.status.busy":"2023-03-11T16:01:03.578364Z","iopub.execute_input":"2023-03-11T16:01:03.578807Z","iopub.status.idle":"2023-03-11T16:01:03.968196Z","shell.execute_reply.started":"2023-03-11T16:01:03.578765Z","shell.execute_reply":"2023-03-11T16:01:03.966761Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"code","source":"import matplotlib .pyplot as plt\nimport pandas as pd\nimport statsmodels .api as sm\nfrom statsmodels .formula.api import ols","metadata":{"execution":{"iopub.status.busy":"2023-03-11T16:01:11.519644Z","iopub.execute_input":"2023-03-11T16:01:11.520341Z","iopub.status.idle":"2023-03-11T16:01:13.465577Z","shell.execute_reply.started":"2023-03-11T16:01:11.520293Z","shell.execute_reply":"2023-03-11T16:01:13.464308Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"# print the first five rows of the dataframe using the belolw function\ndf.head()\n# print the information about the dataset using the below function\ndf.info()\n# change the column names of the dataframe\ndf.set_axis([\"year\",\"co2\",\"temp\"],axis=\"columns\",inplace=True)","metadata":{"execution":{"iopub.status.busy":"2023-03-11T16:03:20.088834Z","iopub.execute_input":"2023-03-11T16:03:20.089256Z","iopub.status.idle":"2023-03-11T16:03:20.104044Z","shell.execute_reply.started":"2023-03-11T16:03:20.089218Z","shell.execute_reply":"2023-03-11T16:03:20.102394Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 31 entries, 0 to 30\nData columns (total 3 columns):\n #   Column  Non-Null Count  Dtype  \n---  ------  --------------  -----  \n 0   year    31 non-null     float64\n 1   co2     31 non-null     float64\n 2   temp    31 non-null     float64\ndtypes: float64(3)\nmemory usage: 872.0 bytes\n","output_type":"stream"}]},{"cell_type":"code","source":"import matplotlib.pyplot as plt\n# plot the scatterplot for the given data\ndf.plot(\"temp\",\"co2\",kind=\"scatter\")\nplt.title(\"Temperature for different co2 levels\")\nplt.ylabel(\"co2 levels\")\nplt.xlabel(\"temp in 0F\")","metadata":{"execution":{"iopub.status.busy":"2023-03-11T16:04:45.019589Z","iopub.execute_input":"2023-03-11T16:04:45.020183Z","iopub.status.idle":"2023-03-11T16:04:45.357679Z","shell.execute_reply.started":"2023-03-11T16:04:45.020132Z","shell.execute_reply":"2023-03-11T16:04:45.356324Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"Text(0.5, 0, 'temp in 0F')"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":"# Obtain the box plots for columns to find any outliers\nplt.boxplot(df['co2'] ,vert=False)\nplt.xlabel('co2')\nplt.show ()","metadata":{"execution":{"iopub.status.busy":"2023-03-11T16:06:13.708931Z","iopub.execute_input":"2023-03-11T16:06:13.709394Z","iopub.status.idle":"2023-03-11T16:06:13.827448Z","shell.execute_reply.started":"2023-03-11T16:06:13.709351Z","shell.execute_reply":"2023-03-11T16:06:13.826022Z"},"trusted":true},"execution_count":7,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":"plt.boxplot(df['temp'] ,vert=False)\nplt.xlabel('temp')\nplt.show ()","metadata":{"execution":{"iopub.status.busy":"2023-03-11T14:22:11.735470Z","iopub.execute_input":"2023-03-11T14:22:11.736572Z","iopub.status.idle":"2023-03-11T14:22:11.927082Z","shell.execute_reply.started":"2023-03-11T14:22:11.736502Z","shell.execute_reply":"2023-03-11T14:22:11.926140Z"},"trusted":true},"execution_count":57,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"iVBORw0KGgoAAAANSUhEUgAAAhYAAAGwCAYAAAD16iy9AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/NK7nSAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAVWElEQVR4nO3de2zVhdnA8aelXKXF4QWLRZkGLGQTBIKCMeKmElgwZtkgmyg6NbqLyowubC4ylyXuaqZTt3cJ0y0iEnUak3nBGAF1TgVq4qSIE5gSQIOoLVRRy+/9Y6Hvi8i05ek5p/j5JCT09Jz+nvPQnN+3hwOnqiiKIgAAElSXewAA4MAhLACANMICAEgjLACANMICAEgjLACANMICAEhTU+oD7tq1KzZt2hS1tbVRVVVV6sMDAF1QFEW0trbG0KFDo7p6389LlDwsNm3aFMOGDSv1YQGABK+99lo0NDTs8/MlD4va2tqI+M9gdXV1pT48ANAFLS0tMWzYsI7z+L6UPCx2//VHXV2dsACAHuaTXsbgxZsAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQJqacg8AB7qXX345Wltbyz0G+6nqw/ei3/ZX472BR0VR06/c41S02traGDFiRLnHoEyEBXSjl19+OUaOHFnuMUhwwhHVseqSgTHuf7ZH05Zd5R6n4q1du1ZcfEYJC+hGu5+puOOOO2LUqFFlnob90f/ttRHLL4mFCxfGuweLxX1pbm6O2bNne5buM0xYQAmMGjUqxo0bV+4x2B+bqiOWR4xqbIwYOrbc00DF8uJNACCNsAAA0ggLACCNsAAA0ggLACCNsAAA0ggLACCNsAAA0ggLACCNsAAA0hwwYdHW1harVq2Ktra2co8CAGVRCefCAyYs1qxZE+PHj481a9aUexQAKItKOBceMGEBAJSfsAAA0ggLACCNsAAA0ggLACCNsAAA0ggLACCNsAAA0ggLACBNp8Ni+fLlMWPGjBg6dGhUVVXF/fff3w1jAQA9UafDYseOHTFmzJi4+eabu2MeAKAHq+nsDaZNmxbTpk3rjlkAgB6u02HRWTt37oydO3d2fNzS0tItx3n33XcjIqK5ublbvj50xe7vx93fn3Cg81hcXpXwmNPtYXH99dfHdddd192HiQ0bNkRExOzZs7v9WNBZGzZsiJNPPrncY0C381hcGcr5mNPtYfHDH/4wrrzyyo6PW1paYtiwYenHGT58eERE3HHHHTFq1Kj0rw9d0dzcHLNnz+74/oQDncfi8qqEx5xuD4u+fftG3759u/sw0b9//4iIGDVqVIwbN67bjwedsfv7Ew50HosrQzkfc/w/FgBAmk4/Y7F9+/b417/+1fHx+vXr4/nnn4/BgwfHUUcdlTocANCzdDosVqxYEaeddlrHx7tfPzFnzpy4/fbb0wYDAHqeTofFlClToiiK7pgFAOjhvMYCAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANAdMWDQ2NsbKlSujsbGx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XJG6ssfJkyfHxo0b48EHH4yiKOL111+Pe+65J77yla+UYuQDxtNPP73X3qdOnRorVqyIDz74oExT9XzOM/unpG9CtnXr1mhvb48hQ4bscfmQIUNiy5Ytn+pr/OY3v4kdO3bEzJkzu2PEHqEre3z55Zdj3rx58cQTT0RNTcnfe64idWWP69atiyeffDL69esX9913X2zdujW+853vxLZt2z6zr7Poyh4nT54cCxcujFmzZsV7770XH374YZx11lnxu9/9rhQjHzC2bNnysXv/8MMPY+vWrVFfX1+myXo255n9U5YXb3707dKLovjYt1D/qEWLFsVPfvKTWLx4cRx++OHdNV6P8Wn32N7eHt/85jfjuuuui5EjR5ZqvB6jM9+Pu3btiqqqqli4cGFMnDgxpk+fHjfccEPcfvvtn+lnLSI6t8fVq1fH5ZdfHtdee22sXLkyHn744Vi/fn1ceumlpRj1gPJxe/+4y/l0nGf2X0l/dD300EOjV69ee/0U88Ybb+xV3R+1ePHiuPDCC+Puu++O008/vTvHrHid3WNra2usWLEimpqa4nvf+15E/OcEWRRF1NTUxJIlS+JLX/pSSWavJF35fqyvr48jjzxyj7cOHjVqVBRFERs3bowRI0Z068yVqCt7vP766+Pkk0+Oq6++OiIijj/++DjooIPilFNOiZ/97Gd+0v6UjjjiiI/de01NTRxyyCFlmqrncp7JUdJnLPr06RPjx4+PRx99dI/LH3300Zg8efI+b7do0aI4//zz48477/R3sNH5PdbV1cULL7wQzz//fMevSy+9NI477rh4/vnn48QTTyzV6BWlK9+PJ598cmzatCm2b9/ecdnatWujuro6GhoaunXeStWVPba1tUV19Z4PP7169YqI//uJm082adKkvfa+ZMmSmDBhQvTu3btMU/VMzjOJSv1q0bvuuqvo3bt3sWDBgmL16tXF3Llzi4MOOqjYsGFDURRFMW/evOLcc8/tuP6dd95Z1NTUFLfcckuxefPmjl9vv/12qUevKJ3d40f5VyH/0dk9tra2Fg0NDcXXvva14sUXXyyWLVtWjBgxorjooovKdRcqQmf3eNtttxU1NTXFrbfeWrzyyivFk08+WUyYMKGYOHFiue5CRWhtbS2ampqKpqamIiKKG264oWhqair+/e9/F0Wx9x7XrVtXDBgwoPj+979frF69uliwYEHRu3fv4p577inXXagInd2j80yukodFURTFLbfcUhx99NFFnz59inHjxhXLli3r+NycOXOKU089tePjU089tYiIvX7NmTOn9INXmM7s8aOExf/p7B6bm5uL008/vejfv3/R0NBQXHnllUVbW1uJp648nd3jTTfdVIwePbro379/UV9fX5xzzjnFxo0bSzx1ZXn88cf/6+Pdx+1x6dKlxQknnFD06dOnGD58ePH73/++9INXmM7u0Xkml7dNBwDSeK8QACCNsAAA0ggLACCNsAAA0ggLACCNsAAA0ggLACCNsAAA0ggLACCNsAA6TJkyJebOnVvuMYAeTFgAAGmEBRAREeeff34sW7YsbrzxxqiqqoqqqqrYsGFDrF69OqZPnx4DBw6MIUOGxLnnnhtbt27tuN2UKVPisssui7lz58bnPve5GDJkSPzxj3+MHTt2xAUXXBC1tbVx7LHHxkMPPdRxm6VLl0ZVVVX87W9/izFjxkS/fv3ixBNPjBdeeKEcdx1IJCyAiIi48cYbY9KkSXHxxRfH5s2bY/PmzdG7d+849dRTY+zYsbFixYp4+OGH4/XXX4+ZM2fucds///nPceihh8azzz4bl112WXz729+Or3/96zF58uRYtWpVTJ06Nc4999xoa2vb43ZXX311/PrXv47nnnsuDj/88DjrrLPigw8+KOXdBpJ5d1Ogw5QpU2Ls2LHx29/+NiIirr322njmmWfikUce6bjOxo0bY9iwYfHSSy/FyJEjY8qUKdHe3h5PPPFERES0t7fHoEGD4qtf/Wr85S9/iYiILVu2RH19fTz99NNx0kknxdKlS+O0006Lu+66K2bNmhUREdu2bYuGhoa4/fbb9woXoOeoKfcAQOVauXJlPP744zFw4MC9PvfKK6/EyJEjIyLi+OOP77i8V69eccghh8QXv/jFjsuGDBkSERFvvPHGHl9j0qRJHb8fPHhwHHfccdHc3Jx6H4DSEhbAPu3atStmzJgRv/jFL/b6XH19fcfve/fuvcfnqqqq9risqqqq4+t9kt3XBXomYQF06NOnT7S3t3d8PG7cuLj33ntj+PDhUVOT/3Dxj3/8I4466qiIiHjrrbdi7dq10djYmH4coHS8eBPoMHz48HjmmWdiw4YNsXXr1vjud78b27Zti2984xvx7LPPxrp162LJkiXxrW99a48A6aqf/vSn8dhjj8U///nPOP/88+PQQw+Ns88+e//vCFA2wgLocNVVV0WvXr1i9OjRcdhhh8X7778fTz31VLS3t8fUqVPjC1/4QlxxxRUxaNCgqK7e/4ePn//853HFFVfE+PHjY/PmzfHAAw9Enz59Eu4JUC7+VQhQcrv/Vchbb70VBx98cLnHARJ5xgIASCMsAIA0/ioEAEjjGQsAII2wAADSCAsAII2wAADSCAsAII2wAADSCAsAII2wAADS/C/pVQRGeqDZ1gAAAABJRU5ErkJggg==\n"},"metadata":{}}]},{"cell_type":"markdown","source":"In statsmodels, ordinary least-squares linear models are specified via the function ols (short for ordinary least-squares).To remove the intercept term, add -1 to the ols formula, as in ols(’y∼x-1’).","metadata":{}},{"cell_type":"code","source":"# analyzing linear models using Python and the data science module statsmodels\nmyData = pd. DataFrame (df)\nmod = ols(\"co2~temp\", data=myData)\nmod_matrix = pd. DataFrame (mod.exog ,columns=mod. exog_names )\n# print the matrix containing the intercept and data values\nprint( mod_matrix )","metadata":{"execution":{"iopub.status.busy":"2023-03-11T16:12:17.694314Z","iopub.execute_input":"2023-03-11T16:12:17.694768Z","iopub.status.idle":"2023-03-11T16:12:17.712997Z","shell.execute_reply.started":"2023-03-11T16:12:17.694716Z","shell.execute_reply":"2023-03-11T16:12:17.711874Z"},"trusted":true},"execution_count":8,"outputs":[{"name":"stdout","text":"    Intercept   temp\n0         1.0  0.270\n1         1.0  0.234\n2         1.0  0.414\n3         1.0  0.666\n4         1.0  0.666\n5         1.0  0.522\n6         1.0  0.774\n7         1.0  0.720\n8         1.0  0.450\n9         1.0  0.504\n10        1.0  0.612\n11        1.0  0.810\n12        1.0  0.576\n13        1.0  0.918\n14        1.0  1.134\n15        1.0  0.792\n16        1.0  0.756\n17        1.0  0.972\n18        1.0  1.080\n19        1.0  1.098\n20        1.0  1.026\n21        1.0  1.170\n22        1.0  1.098\n23        1.0  1.098\n24        1.0  0.972\n25        1.0  1.134\n26        1.0  1.260\n27        1.0  1.026\n28        1.0  1.116\n29        1.0  1.188\n30        1.0  1.332\n","output_type":"stream"}]},{"cell_type":"code","source":"# creating a new dataframe for including the number of years starting from 1984\ndf2=pd.DataFrame({})\ndf2[\"time\"]=np.arange(1,32,1)\ndf2[\"co2\"]=myData[\"co2\"]","metadata":{"execution":{"iopub.status.busy":"2023-03-11T16:13:26.908388Z","iopub.execute_input":"2023-03-11T16:13:26.908830Z","iopub.status.idle":"2023-03-11T16:13:26.917617Z","shell.execute_reply.started":"2023-03-11T16:13:26.908790Z","shell.execute_reply":"2023-03-11T16:13:26.916197Z"},"trusted":true},"execution_count":9,"outputs":[]},{"cell_type":"code","source":"myData.head()","metadata":{"execution":{"iopub.status.busy":"2023-03-11T14:22:11.963168Z","iopub.execute_input":"2023-03-11T14:22:11.963615Z","iopub.status.idle":"2023-03-11T14:22:11.979791Z","shell.execute_reply.started":"2023-03-11T14:22:11.963567Z","shell.execute_reply":"2023-03-11T14:22:11.978578Z"},"trusted":true},"execution_count":60,"outputs":[{"execution_count":60,"output_type":"execute_result","data":{"text/plain":"     year     co2   temp\n0  1984.0  344.58  0.270\n1  1985.0  346.04  0.234\n2  1986.0  347.39  0.414\n3  1987.0  349.16  0.666\n4  1988.0  351.56  0.666","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>year</th>\n      <th>co2</th>\n      <th>temp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1984.0</td>\n      <td>344.58</td>\n      <td>0.270</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1985.0</td>\n      <td>346.04</td>\n      <td>0.234</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1986.0</td>\n      <td>347.39</td>\n      <td>0.414</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1987.0</td>\n      <td>349.16</td>\n      <td>0.666</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1988.0</td>\n      <td>351.56</td>\n      <td>0.666</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"model = ols(\"co2~temp\", data=myData)\nfit = model.fit () #fit the model defined above\nb0 , b1= fit.params\nprint(fit.params)","metadata":{"execution":{"iopub.status.busy":"2023-03-11T16:14:58.508120Z","iopub.execute_input":"2023-03-11T16:14:58.508547Z","iopub.status.idle":"2023-03-11T16:14:58.530287Z","shell.execute_reply.started":"2023-03-11T16:14:58.508504Z","shell.execute_reply":"2023-03-11T16:14:58.528537Z"},"trusted":true},"execution_count":11,"outputs":[{"name":"stdout","text":"Intercept    328.629718\ntemp          47.919083\ndtype: float64\n","output_type":"stream"}]},{"cell_type":"markdown","source":"The above output gives the least-squares estimates of β0 and β1.","metadata":{}},{"cell_type":"code","source":"# scatter plot including the Regression line as well\nplt.plot(myData.temp , b0 + b1*myData.temp)\nplt.scatter(myData.temp , myData.co2)\nplt.ylabel(\"co2 levels\")\nplt.xlabel(\"temp in 0F\")","metadata":{"execution":{"iopub.status.busy":"2023-03-11T16:15:01.688381Z","iopub.execute_input":"2023-03-11T16:15:01.688830Z","iopub.status.idle":"2023-03-11T16:15:01.905095Z","shell.execute_reply.started":"2023-03-11T16:15:01.688788Z","shell.execute_reply":"2023-03-11T16:15:01.903760Z"},"trusted":true},"execution_count":12,"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"Text(0.5, 0, 'temp in 0F')"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":"# Although ols performs a complete analysis of the linear model, not all its calculations\n# need to be presented. A summary of the results can be obtained with the method summary.\n\nprint(fit.summary ())","metadata":{"execution":{"iopub.status.busy":"2023-03-11T16:15:46.408365Z","iopub.execute_input":"2023-03-11T16:15:46.408811Z","iopub.status.idle":"2023-03-11T16:15:46.426917Z","shell.execute_reply.started":"2023-03-11T16:15:46.408770Z","shell.execute_reply":"2023-03-11T16:15:46.425528Z"},"trusted":true},"execution_count":13,"outputs":[{"name":"stdout","text":"                            OLS Regression Results                            \n==============================================================================\nDep. Variable:                    co2   R-squared:                       0.785\nModel:                            OLS   Adj. R-squared:                  0.778\nMethod:                 Least Squares   F-statistic:                     106.2\nDate:                Sat, 11 Mar 2023   Prob (F-statistic):           3.32e-11\nTime:                        16:15:46   Log-Likelihood:                -106.06\nNo. Observations:                  31   AIC:                             216.1\nDf Residuals:                      29   BIC:                             219.0\nDf Model:                           1                                         \nCovariance Type:            nonrobust                                         \n==============================================================================\n                 coef    std err          t      P>|t|      [0.025      0.975]\n------------------------------------------------------------------------------\nIntercept    328.6297      4.190     78.426      0.000     320.060     337.200\ntemp          47.9191      4.650     10.305      0.000      38.409      57.429\n==============================================================================\nOmnibus:                        0.754   Durbin-Watson:                   1.122\nProb(Omnibus):                  0.686   Jarque-Bera (JB):                0.774\nSkew:                          -0.175   Prob(JB):                        0.679\nKurtosis:                       2.310   Cond. No.                         5.96\n==============================================================================\n\nNotes:\n[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","output_type":"stream"}]},{"cell_type":"markdown","source":"The main output items are the following:\n\n• **coef**: Estimates of the parameters of the regression line.\n\n• **std error**: Standard deviations of the estimators of the regression line. These are the square roots of the variances of the {bβi} obtained.\n\n• **t**: Realization of test statistics associated with the hypotheses H0 : βi = 0 and H1 : βi , 0, i = 0, 1. In particular, the outcome of T. \n\n• **P>|t|** : P-value of test (two-sided test).\n\n• **[0.025 0.975]:** 95% confidence intervals for the parameters.\n\n• **R-Squared**: Coefficient of determination R2 (percentage of variation explained by the regression)\n\n• **Adj. R-Squared**: adjusted R2\n\n• **F-statistic**: Realization of the F test statistic associated with testing the full model against the default model. The associated degrees of freedom (Df Model and Df Residuals) are given, as is the P-value: Prob (F-statistic).\n\n• **AIC**: The AIC number is, minus two times the log-likelihood plus two times the number of model parameters.","metadata":{}},{"cell_type":"code","source":"df2.plot(\"co2\",\"time\",kind=\"scatter\")\nplt.ylabel(\"time\")\nplt.xlabel(\"co2\")","metadata":{"execution":{"iopub.status.busy":"2023-03-11T16:23:03.430605Z","iopub.execute_input":"2023-03-11T16:23:03.432083Z","iopub.status.idle":"2023-03-11T16:23:03.628853Z","shell.execute_reply.started":"2023-03-11T16:23:03.432023Z","shell.execute_reply":"2023-03-11T16:23:03.627729Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"Text(0.5, 0, 'co2')"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"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cT7Pnz+v8+fPq0sX//+kR0VFqaGhQRLzeSWt/Wx6PB4lJSWptLRUn3zyiSZOnCiJuWzq7rvvVklJiYqLi32voUOH6sEHH1RxcbGuv/56paam+s3VuXPnVFRU5JurgM5npy5zhq0sXLjQ7Nixw5SVlZlPP/3ULFq0yHTp0sVs377d1NXVmX/6p38yu3btMmVlZaagoMCMGDHCXHfddS1up+vdu7f54IMPzP79+824ceMi8vbEy82lMcZs2rTJdOvWzbz55pumtLTUvP766yYqKsp8+OGHvmMwl5dcaS6NMaampsbExsaa1atXt3oM5vI7V5rP0aNHm1tuucUUFBSYL774wqxbt850797d/PKXv/Qdg/m85Epz+e///u+moKDAHDlyxLz77rsmMzPTTJ482e8YzGXbmt79ZMylW7o9Ho/ZtGmTKSkpMVOnTm31lu5AzCehxgF+/OMfm8zMTBMdHW2SkpLM3Xff7fvHeebMGZOTk2OSkpJMt27dTJ8+fcz06dPN0aNH/Y5x9uxZM3v2bJOQkGBiYmLM3//937d4TyS43Fw2Wrt2renfv7/p3r27GTRokN9zQIxhLhu1Zy7feOMNExMTY06dOtXqMZjL71xpPisqKsyMGTNMenq66d69u7nxxhvNihUrTENDg+89zOclV5rLV1991fTu3dv338znnnvOeL1ev2Mwl21rHmoaGhrMkiVLTGpqqnG73WbUqFGmpKTE7zOBmk+XMcYE5BwUAACAhbimBgAAOAKhBgAAOAKhBgAAOAKhBgAAOAKhBgAAOAKhBgAAOAKhBgAAOAKhBgAAOAKhBgAAOAKhBoCjrFmzRnfddZd69eqlXr166Z577tGePXusHhaAECDUAHCUwsJCTZ06VQUFBfr444/Vp08f5eTk6Ouvv7Z6aACCjFADwHYaGhq0bNky9e/fX263W3369NHPf/5zSVJJSYnGjRunmJgYXXvttfrJT36i+vp632f/7d/+TTNnztRtt92mv/mbv9GaNWvU0NCg//7v/7bq2wEQIoQaALazcOFCLVu2TIsXL9b//u//av369UpJSdGZM2c0fvx49erVS3v37tV//Md/6IMPPtDs2bPbPNaZM2d0/vx5JSQkhPA7AGAFWroB2EpdXZ2SkpK0atUqPf7443771qxZowULFqi8vFw9evSQJL333nu67777dOzYMaWkpLQ43qxZs/T+++/rs88+U/fu3UPyPQCwBmdqANjK559/Lq/Xq7vvvrvVfYMGDfIFGkkaOXKkGhoadOjQoRbvX758uTZs2KBNmzYRaIAI0NXqAQBAUzExMW3uM8bI5XK1uq/59ldeeUVLly7VBx98oIEDBwZ0jADsiTM1AGwlOztbMTExrV7Ye/PNN6u4uFinT5/2bdu5c6e6dOmiG264wbft5Zdf1gsvvKBt27Zp6NChIRk3AOtxpgaArXTv3l0LFizQ/PnzFR0drZEjR+r48eM6ePCgHnzwQS1ZskTTp09Xbm6ujh8/rjlz5ujhhx/2XU+zfPlyLV68WOvXr1ffvn1VWVkpSerZs6d69uxp5bcGIMi4UBiA7TQ0NCgvL09r1qzRsWPHlJaWpqeeekoLFy5USUmJnnnmGX388ceKjY3VAw88oJUrV/oCS9++ffXVV1+1OOaSJUuUm5sb4u8EQCgRagAAgCNwTQ0AAHAEQg0AAHAEQg0AAHAEQg0AAHAEQg0AAHAEQg0AAHAEQg0AAHAEQg0AAHAEQg0AAHAEQg0AAHAEQg0AAHCE/weewhrFiWt8UAAAAABJRU5ErkJggg==\n"},"metadata":{}}]},{"cell_type":"code","source":"# creating another model for fitting a regression line between co2 levels and the no.of years\nmod2 = ols(\"time~co2\", data=df2)\nmod_matrix2 = pd. DataFrame (mod2.exog ,columns=mod2. exog_names )\nprint( mod_matrix2 )","metadata":{"execution":{"iopub.status.busy":"2023-03-11T16:24:09.589325Z","iopub.execute_input":"2023-03-11T16:24:09.589908Z","iopub.status.idle":"2023-03-11T16:24:09.606567Z","shell.execute_reply.started":"2023-03-11T16:24:09.589864Z","shell.execute_reply":"2023-03-11T16:24:09.605350Z"},"trusted":true},"execution_count":15,"outputs":[{"name":"stdout","text":"    Intercept     co2\n0         1.0  344.58\n1         1.0  346.04\n2         1.0  347.39\n3         1.0  349.16\n4         1.0  351.56\n5         1.0  353.07\n6         1.0  354.35\n7         1.0  355.57\n8         1.0  356.38\n9         1.0  357.07\n10        1.0  358.82\n11        1.0  360.80\n12        1.0  362.59\n13        1.0  363.71\n14        1.0  366.65\n15        1.0  368.33\n16        1.0  369.52\n17        1.0  371.13\n18        1.0  373.22\n19        1.0  375.77\n20        1.0  377.49\n21        1.0  379.80\n22        1.0  381.90\n23        1.0  383.76\n24        1.0  385.59\n25        1.0  387.37\n26        1.0  389.85\n27        1.0  391.63\n28        1.0  393.82\n29        1.0  396.48\n30        1.0  398.61\n","output_type":"stream"}]},{"cell_type":"code","source":"model2 = ols(\"time~co2\", data=df2)\nfit2 = model2.fit () #fit the model defined above\nb00 , b11= fit2.params\nprint(fit2.params)","metadata":{"execution":{"iopub.status.busy":"2023-03-11T14:31:47.782449Z","iopub.execute_input":"2023-03-11T14:31:47.782969Z","iopub.status.idle":"2023-03-11T14:31:47.798707Z","shell.execute_reply.started":"2023-03-11T14:31:47.782930Z","shell.execute_reply":"2023-03-11T14:31:47.797351Z"},"trusted":true},"execution_count":73,"outputs":[{"name":"stdout","text":"Intercept   -189.891868\nco2            0.557339\ndtype: float64\n","output_type":"stream"}]},{"cell_type":"code","source":"plt.plot(df2.co2 , b00 + b11*df2.co2)\nplt.scatter(df2.co2 , df2.time)\nplt.ylabel(\"time\")\nplt.xlabel(\"co2\")","metadata":{"execution":{"iopub.status.busy":"2023-03-11T14:33:05.562356Z","iopub.execute_input":"2023-03-11T14:33:05.563143Z","iopub.status.idle":"2023-03-11T14:33:05.743624Z","shell.execute_reply.started":"2023-03-11T14:33:05.563099Z","shell.execute_reply":"2023-03-11T14:33:05.742378Z"},"trusted":true},"execution_count":75,"outputs":[{"execution_count":75,"output_type":"execute_result","data":{"text/plain":"Text(0.5, 0, 'co2')"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":"print(fit2.summary ())","metadata":{"execution":{"iopub.status.busy":"2023-03-11T14:33:26.362932Z","iopub.execute_input":"2023-03-11T14:33:26.363349Z","iopub.status.idle":"2023-03-11T14:33:26.377123Z","shell.execute_reply.started":"2023-03-11T14:33:26.363314Z","shell.execute_reply":"2023-03-11T14:33:26.375707Z"},"trusted":true},"execution_count":76,"outputs":[{"name":"stdout","text":"                            OLS Regression Results                            \n==============================================================================\nDep. Variable:                   time   R-squared:                       0.993\nModel:                            OLS   Adj. R-squared:                  0.993\nMethod:                 Least Squares   F-statistic:                     4113.\nDate:                Sat, 11 Mar 2023   Prob (F-statistic):           8.40e-33\nTime:                        14:33:26   Log-Likelihood:                -35.005\nNo. Observations:                  31   AIC:                             74.01\nDf Residuals:                      29   BIC:                             76.88\nDf Model:                           1                                         \nCovariance Type:            nonrobust                                         \n==============================================================================\n                 coef    std err          t      P>|t|      [0.025      0.975]\n------------------------------------------------------------------------------\nIntercept   -189.8919      3.214    -59.090      0.000    -196.464    -183.319\nco2            0.5573      0.009     64.129      0.000       0.540       0.575\n==============================================================================\nOmnibus:                        9.007   Durbin-Watson:                   0.148\nProb(Omnibus):                  0.011   Jarque-Bera (JB):                2.331\nSkew:                          -0.113   Prob(JB):                        0.312\nKurtosis:                       1.676   Cond. No.                     8.55e+03\n==============================================================================\n\nNotes:\n[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n[2] The condition number is large, 8.55e+03. This might indicate that there are\nstrong multicollinearity or other numerical problems.\n","output_type":"stream"}]},{"cell_type":"markdown","source":"From the above summary, it is clearly shown that the co2 levels are increasing with time.","metadata":{}},{"cell_type":"code","source":"max_co2=b0 + b1*3.6\nprint(max_co2)","metadata":{"execution":{"iopub.status.busy":"2023-03-11T14:38:07.802600Z","iopub.execute_input":"2023-03-11T14:38:07.802988Z","iopub.status.idle":"2023-03-11T14:38:07.808707Z","shell.execute_reply.started":"2023-03-11T14:38:07.802954Z","shell.execute_reply":"2023-03-11T14:38:07.807438Z"},"trusted":true},"execution_count":82,"outputs":[{"name":"stdout","text":"501.1384156126437\n","output_type":"stream"}]},{"cell_type":"markdown","source":"the maximum permissible level of CO2 in the atmosphere should be kept below 501.13 ppm such that the global temperature increase should be kept below 2 deg C (3.6 deg F).This can be estimated by the model1","metadata":{}},{"cell_type":"code","source":"print(b00 + b11*max_co2)","metadata":{"execution":{"iopub.status.busy":"2023-03-11T14:38:11.562261Z","iopub.execute_input":"2023-03-11T14:38:11.562653Z","iopub.status.idle":"2023-03-11T14:38:11.567972Z","shell.execute_reply.started":"2023-03-11T14:38:11.562620Z","shell.execute_reply":"2023-03-11T14:38:11.567100Z"},"trusted":true},"execution_count":83,"outputs":[{"name":"stdout","text":"89.41194513321057\n","output_type":"stream"}]},{"cell_type":"markdown","source":"It will take nearly 90-31=59 years for CO2 to reach the maximum permissible level. this can be estimated by the model 2.","metadata":{}}]}
